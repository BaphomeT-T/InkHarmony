@startuml
package AdministracionUsuarios {
    class Administrador {
        - id: int
        - usuario: String
        - contrase√±a: String
        + iniciarSesion(): boolean
        + activarCuenta(usuario: Perfil): void
        + desactivarCuenta(usuario: Perfil): void
        + cambiarTipoUsuario(usuario: Perfil, tipo: String): void
        + eliminarCuenta(usuario: Perfil): void
        + consultarUsuarios(): List<Perfil>
    }
}
package CatalogoCanciones {
enum Genero {
        GAME_OST
        ROCK
        ROCK_ALTERNATIVO
        VALS
        TANGO
        REGIONAL_MEXICANA
        RAP
        CLASICA
        MOVIE_OST
        JAZZ
        COUNTRY
        POP
        REGGAETON
        TRAP_LATINO
        TRAP
        K_POP
        BOLERO
        PASILLO
}
}
package CatalogoArtistas {
    class ArtistaDAO {

        + registrarArtista(artista: Artista): boolean
        + actualizarArtista(artista: Artista): boolean
        + eliminarArtista(id_artista: int): void
        + buscarArtista(): List<Artista>
        + buscarArtistaID(id_artista: int): Artista
    }

    class ServicioValidacionArtista {
        + validarCampoNombre(nombre: string): String
        + esNombreUnico(nombre: string): boolean
        + tieneElementoAsociado(artista: Artista): boolean
    }

    class Artista {
        - id: int
        - nombre: String
        - generos: List<Genero>
        - biografia: String
        - imagen: BufferedImage
    }


    interface UnicoNombreValidable {
        + esNombreUnico(nombre: string): boolean
    }

    interface AsociacionValidable {
        + tieneElementosAsociados(artista : Artista): boolean
    }
}

Administrador --> ArtistaDAO
ArtistaDAO --> Artista
ServicioValidacionArtista --> Artista
ServicioValidacionArtista ..|> UnicoNombreValidable
ServicioValidacionArtista ..|> AsociacionValidable
ArtistaDAO --> ServicioValidacionArtista
Artista --> Genero
@enduml